# Generated by Django 5.2.4 on 2025-07-27 18:20

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='products.attribute')),
            ],
            options={
                'unique_together': {('attribute', 'value')},
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(blank=True, help_text='A unique slug for the category URL. Leave blank to auto-generate.', max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/')),
                ('parent', models.ForeignKey(blank=True, help_text='Select a parent category to create a sub-category.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='products.category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type', models.CharField(choices=[('simple', 'Simple'), ('variable', 'Variable')], default='simple', max_length=10)),
                ('name', models.CharField(help_text='Product title.', max_length=255)),
                ('slug', models.SlugField(blank=True, help_text='A unique slug for the product URL. Leave blank to auto-generate.', max_length=255, unique=True)),
                ('description', models.TextField(help_text='Detailed description (supports rich text).')),
                ('short_description', models.TextField(blank=True, help_text='A short, catchy summary.')),
                ('sku', models.CharField(blank=True, help_text='Stock Keeping Unit.', max_length=100, null=True, unique=True)),
                ('regular_price', models.DecimalField(blank=True, decimal_places=2, help_text='Price for simple products.', max_digits=10, null=True)),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, help_text='Sale price. Must be less than regular price.', max_digits=10, null=True)),
                ('stock_quantity', models.PositiveIntegerField(default=0, help_text='Stock for simple products. For variable products, manage stock in variations.')),
                ('manage_stock', models.BooleanField(default=True, help_text='Enable stock management.')),
                ('is_available', models.BooleanField(default=True, help_text='Is this product available for purchase?')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='Product weight in KG.', max_digits=6, null=True)),
                ('length', models.DecimalField(blank=True, decimal_places=2, help_text='Product length in CM.', max_digits=6, null=True)),
                ('width', models.DecimalField(blank=True, decimal_places=2, help_text='Product width in CM.', max_digits=6, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, help_text='Product height in CM.', max_digits=6, null=True)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='products/featured/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='products.category')),
                ('tags', models.ManyToManyField(blank=True, related_name='products', to='products.tag')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/gallery/')),
                ('alt_text', models.CharField(blank=True, max_length=255)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductVariation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('regular_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sku', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('attributes', models.ManyToManyField(related_name='variations', to='products.attributevalue')),
                ('image', models.ForeignKey(blank=True, help_text="Select an image from the product's gallery for this variation.", null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.productimage')),
                ('product', models.ForeignKey(limit_choices_to={'product_type': 'variable'}, on_delete=django.db.models.deletion.CASCADE, related_name='variations', to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField()),
                ('is_approved', models.BooleanField(default=True, help_text='Approve the comment to make it visible.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='products.product')),
                ('user', models.ForeignKey(help_text='User who wrote the review.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('product', 'user')},
            },
        ),
    ]
