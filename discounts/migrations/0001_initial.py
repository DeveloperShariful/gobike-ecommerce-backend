# Generated by Django 5.2.4 on 2025-07-28 06:49

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0006_taxclass_product_allow_backorders_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='The code customers will enter to get the discount.', max_length=50, unique=True)),
                ('discount_type', models.CharField(choices=[('percentage', 'Percentage Discount'), ('fixed_cart', 'Fixed Cart Discount'), ('fixed_product', 'Fixed Product Discount')], default='percentage', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='The value of the discount. For percentage, enter a value like 10 for 10%.', max_digits=10)),
                ('minimum_spend', models.DecimalField(blank=True, decimal_places=2, help_text='The minimum order amount for the coupon to be valid.', max_digits=12, null=True)),
                ('maximum_spend', models.DecimalField(blank=True, decimal_places=2, help_text='The maximum order amount for the coupon to be valid.', max_digits=12, null=True)),
                ('usage_limit_per_coupon', models.PositiveIntegerField(blank=True, help_text='How many times this coupon can be used in total. Leave blank for unlimited.', null=True)),
                ('usage_limit_per_user', models.PositiveIntegerField(blank=True, help_text='How many times a single user can use this coupon. Leave blank for unlimited.', null=True)),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('times_used', models.PositiveIntegerField(default=0, editable=False)),
                ('categories', models.ManyToManyField(blank=True, help_text='Product categories this coupon applies to.', to='products.category')),
                ('exclude_categories', models.ManyToManyField(blank=True, help_text='Product categories this coupon should NOT apply to.', related_name='excluded_coupons', to='products.category')),
                ('exclude_products', models.ManyToManyField(blank=True, help_text='Products this coupon should NOT apply to.', related_name='excluded_coupons', to='products.product')),
                ('products', models.ManyToManyField(blank=True, help_text='Products this coupon applies to. Leave blank to apply to all products in the cart.', to='products.product')),
            ],
            options={
                'verbose_name': 'Coupon',
                'verbose_name_plural': 'Coupons',
                'ordering': ['-valid_to'],
            },
        ),
    ]
